{"version":3,"sources":["components/Countries.js","components/Country.js","components/Header.js","components/Tools.js","App.js","index.js"],"names":["Countries","setCountries","countries","inputSearch","filteredCountries","setFilteredCountries","continent","lightTheme","fetchCountryData","a","fetch","response","json","useEffect","filter","country","name","toLowerCase","includes","region","filterByContinent","className","map","flag","population","capital","numericCode","to","src","alt","toLocaleString","navigator","language","minimumFractionDigits","Country","useState","setCountry","useParams","fetchCountryByName","c","nativeName","subregion","topLevelDomain","currencies","languages","Header","setLightTheme","onClick","prevTheme","document","body","classList","toggle","Tools","setInputSearch","setContinent","type","placeholder","onInput","e","target","value","id","onChange","hidden","App","exact","path","children","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2b20791c.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst url = 'https://restcountries.eu/rest/v2/all';\r\n\r\nconst Countries = ({ setCountries, countries, inputSearch, filteredCountries, setFilteredCountries, continent, lightTheme }) => {\r\n\r\n    const fetchCountryData = async () => {\r\n        const response = await fetch(url)\r\n        const countries = await response.json()\r\n        setCountries(countries)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCountryData()\r\n    }, [])\r\n\r\n    const filterCountries = () => {\r\n        setFilteredCountries(countries.filter((country) => {\r\n            return country.name.toLowerCase().includes(inputSearch.toLowerCase())\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        filterCountries();\r\n    }, [inputSearch])\r\n\r\n    const filterByContinent = () => {\r\n        switch (continent) {\r\n            case 'africa':\r\n                setFilteredCountries(countries.filter(country => country.region === 'Africa'));\r\n                break;\r\n            case 'america':\r\n                setFilteredCountries(countries.filter(country => country.region === 'Americas'));\r\n                break;\r\n            case 'asia':\r\n                setFilteredCountries(countries.filter(country => country.region === 'Asia'));\r\n                break;\r\n            case 'europe':\r\n                setFilteredCountries(countries.filter(country => country.region === 'Europe'));\r\n                break;\r\n            case 'oceania':\r\n                setFilteredCountries(countries.filter(country => country.region === 'Oceania'));\r\n                break;\r\n            default:\r\n                setFilteredCountries(countries);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        filterByContinent();\r\n    }, [countries, continent])\r\n\r\n\r\n    return (\r\n        <>\r\n            <section className=\"countries-wrapper flex flex-jc-sb\">\r\n                {filteredCountries.map((country) => {\r\n                    const { flag, name, population, region, capital, numericCode } = country\r\n\r\n                    return (\r\n                        <div className={`country transition ${lightTheme ? 'light-theme' : ''}`} key={numericCode}>\r\n                            <Link to={`/countries/${name}`}>\r\n                                <img src={flag} alt={name} className=\"country__img\" />\r\n                            </Link>\r\n                            <div className=\"country__info\">\r\n                                <h4>{name}</h4>\r\n                                <p><span>Population: </span>{population.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</p>\r\n                                <p><span>Region: </span>{region}</p>\r\n                                <p><span>Capital: </span>{capital}</p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Countries\r\n","import React, { useState, useEffect } from 'react'\r\nimport { HiArrowNarrowLeft } from 'react-icons/hi'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nconst Country = ({ lightTheme }) => {\r\n    const [country, setCountry] = useState([])\r\n    const { name } = useParams()\r\n\r\n    const fetchCountryByName = async () => {\r\n        const response = await fetch(`https://restcountries.eu/rest/v2/name/${name}`)\r\n        const country = await response.json()\r\n        setCountry(country)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCountryByName()\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <section className=\"country-all\">\r\n            <Link to='/' className=\"country-all__link\">\r\n                <div className={`country-all__link-back flex flex-ai-c flex-jc-sb transition ${lightTheme ? 'light-theme' : ''}`}>\r\n                    <HiArrowNarrowLeft className={`country-all__link-back-arrow transition ${lightTheme ? 'light-theme' : ''}`} />\r\n                    <button>Back</button>\r\n                </div>\r\n            </Link>\r\n\r\n            {country.map((c) => {\r\n                const { flag, name, population, region, capital, numericCode, nativeName, subregion, topLevelDomain, currencies, languages } = c\r\n\r\n                return (\r\n                    <div className=\"country-all-each-wrapper\" key={numericCode}>\r\n                        <div className=\"country-all-each flex flex-ai-c flex-jc-c\" key={numericCode}>\r\n                            <div className=\"country-all-each__img-wrapper\">\r\n                                <img src={flag} alt={name} />\r\n                            </div>\r\n                            <div className={`country-all-each__info flex transition ${lightTheme ? 'light-theme' : ''}`}>\r\n                                <h2>{name}</h2>\r\n                                <div className=\"country-all-each__info-left\">\r\n                                    <p><span>Native Name: </span>{nativeName}</p>\r\n                                    <p><span>Population: </span>{population.toLocaleString(navigator.language, { minimumFractionDigits: 0 })}</p>\r\n                                    <p><span>Region: </span>{region}</p>\r\n                                    <p><span>Sub Region: </span>{subregion}</p>\r\n                                    <p><span>Capital: </span>{capital}</p>\r\n                                </div>\r\n                                <div className=\"country-all-each__info-right\">\r\n                                    <p><span>Top Level Domain: </span>{topLevelDomain}</p>\r\n                                    <p><span>Currencies: </span>{currencies[0].name}</p>\r\n                                    <p><span>Languages: </span>{languages[0].name}</p>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Country\r\n","import React from 'react'\r\nimport { FaMoon } from 'react-icons/fa'\r\nimport { FaRegMoon } from 'react-icons/fa'\r\n\r\nconst Header = ({ lightTheme, setLightTheme }) => {\r\n\r\n\r\n    return (\r\n        <header className={`header flex flex-ai-c flex-jc-sb transition ${lightTheme ? 'light-theme' : ''}`}>\r\n            <div className=\"header__logo\">Where in the world?</div>\r\n            <div className=\"header__theme flex flex-ai-c\" onClick={() => { setLightTheme(prevTheme => !prevTheme); document.body.classList.toggle('light-theme') }}>\r\n                <FaMoon className={`transition ${lightTheme ? 'light-theme opacity-hide' : ''}`} />\r\n                <FaRegMoon className={`transition ${lightTheme ? 'light-theme' : 'opacity-hide'}`} />\r\n                <p>Dark Mode</p>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { AiOutlineSearch } from 'react-icons/ai'\r\n\r\nconst Tools = ({ setInputSearch, setContinent, lightTheme }) => {\r\n    const continentHandler = (e) => {\r\n        setContinent(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <section className=\"tools flex flex-ai-c flex-jc-sb\">\r\n            <div className={`tools__search flex flex-ai-c transition ${lightTheme ? 'light-theme' : ''}`}>\r\n                <AiOutlineSearch className=\"magnifier\" />\r\n                <input type=\"search\" placeholder=\"Search for a Country...\" onInput={(e) => setInputSearch(e.target.value)} />\r\n            </div>\r\n\r\n            <div className={`tools__filter-wrapper transition ${lightTheme ? 'light-theme' : ''}`}>\r\n                <select className={`tools__filter transition ${lightTheme ? 'light-theme' : ''}`} id=\"regions\" onChange={continentHandler}>\r\n                    <option value=\"title\" hidden>Filter by Region</option>\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"africa\">Africa</option>\r\n                    <option value=\"america\">America</option>\r\n                    <option value=\"asia\">Asia</option>\r\n                    <option value=\"europe\">Europe</option>\r\n                    <option value=\"oceania\">Oceania</option>\r\n                </select>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Tools\r\n","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Countries from './components/Countries'\nimport Country from './components/Country'\nimport Header from './components/Header'\nimport Tools from './components/Tools'\n\nfunction App() {\n  const [inputSearch, setInputSearch] = useState('')\n  const [countries, setCountries] = useState([]);\n  const [filteredCountries, setFilteredCountries] = useState([]);\n  const [continent, setContinent] = useState('title');\n  const [lightTheme, setLightTheme] = useState(false);\n\n  return (\n    <Router>\n      <Header\n        lightTheme={lightTheme}\n        setLightTheme={setLightTheme}\n      />\n      <div className=\"container\">\n        <Route exact path=\"/\">\n          <Tools\n            inputSearch={inputSearch}\n            setInputSearch={setInputSearch}\n            countries={countries}\n            setCountries={setCountries}\n            continent={continent}\n            setContinent={setContinent}\n            lightTheme={lightTheme}\n          />\n          <Countries\n            inputSearch={inputSearch}\n            countries={countries}\n            setCountries={setCountries}\n            filteredCountries={filteredCountries}\n            setFilteredCountries={setFilteredCountries}\n            continent={continent}\n            lightTheme={lightTheme}\n          />\n        </Route>\n        <Route path=\"/countries/:name\" children={<Country lightTheme={lightTheme} />}></Route>\n      </div>\n\n    </Router >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './scss/styles.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}